计算机网络中的广播地址:
	IP网络范围中，最大的IP地址被保留作为广播地址来使用的，广播数据包会被发送到同一网络上的所有端口，该网络中的每台主机都会收到这条广播

广播:
	每个应用程序都可以对自己感兴趣的广播进行注册，这样该程序只会接受自己所注册的广播内容。广播可能来自系统或其他应用程序。
	广播类型:
		标准广播:一对多(异步，所有广播接收器会在同一时刻收到广播消息)->效率高，无法被截断
		有序广播:一对一(同步，广播接收器存在先后顺序，前面的广播接收器可以截断后面的广播接收器<后面的就收不到广播了>)

接收广播:
	动态注册:代码中注册，可以自由地控制注册与注销，有很强的灵活性，必须在程序启动后才能接收到广播(广播注册逻辑写在onCreate()方法中)
		①创建广播接收器对象
			自定义类继承BroadcastReceiver并覆写onReceive()
		②创建广播接收设置对象
			创建IntentFilter对象并设置其action，实现广播接收器监听广播的设置(该广播接收器要接收哪一个广播)
		③完成广播注册
			registerReveiver()传入广播接收器对象和广播接收设置对象
		④取消注册
			动态注册的广播一定要取消注册，在该活动的onDestroy()中取消广播的
	静态注册:AndroidMainifest.xml中注册，可以在程序未启动情况下就接收到广播
		①建立专门的广播接收器(静态)
		②在AndroidMainifest中进行注册(Android Studio已经自动完成)-需要声明权限和intent-filter的action->和动态注册的广播接收设置对象类似
	注意事项:
		不要再广播的onReceive()中添加过多逻辑或进行任何耗时操作
		广播一般扮演的就是打开程序其他组件的角色(创建状态栏通知，启动服务)

发送自定义广播:
	标准广播:
		①可以设置一下该自定义广播的接收器->将广播接收设置对象的action设置为自定义广播即可
		②自定义的广播实际上就是通过Intent对象实现(该对象的构造函数需要添加action->就是自定义的那个action或系统自带的action)
			**Android8自定义广播接收不到问题->必须设置Intent对象的component属性->创建ComponentName变量并传入自定义广播所在的包名+具体路径**
		③通过sendBroadcast将该Intent(广播对象)发送出去
	有序广播:
		①通过sendOrderedBroadcast将该Intent发送出去
		②设置优先级->设置多个不同的filter(这些filter发送同样的广播信息，每个filter对应不同的接收器，类似于静态注册)->设置这些filter的priority即可
			同一个广播设置多个filter并对应多个接收器->设置filter的优先级即可(https://www.jianshu.com/p/24c31ee475b4)
		③可以拦截->abortBroadcast()
	由于Android8的新特性，也就说明在发送广播时必须指定接收器(自定义广播接收器)
	Android8后一般采用动态注册广播的形式实现标准广播和有序广播(上面所说的新特性只针对静态注册)

本地广播:
	系统全局广播:发出的广播可以被其他任何应用程序接收到，也可以接收来自其他任何应用程序的广播。存在安全性问题(关键性数据被其他程序截获，不停接收其他程序的广播)
	本地广播:只能在当前应用程序内部进行传递，广播接收器只接收来自本应用程序发出的广播(LocalBroadcastManager)
		具体实现与动态注册基本相同，只不过先通过LocalBroadcastManager的getInstance()得到一个实例，注册广播接收器时调用LocalBroadcastManager的registerReceiver()，发送广播时调用LocalBroadcastManager的sendBroadcast()，仅此而已
	注意:本地广播无法通过静态注册方式接收
















